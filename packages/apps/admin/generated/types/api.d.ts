/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/users/active_users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get users by IDs */
        get: operations["AdminUsersController_findManyUsers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/active_users/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get user by ID */
        get: operations["AdminUsersController_findUserById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/deleted_users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get users by IDs */
        get: operations["AdminUsersController_findManyDeletedUsers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/deleted_users/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get user by ID */
        get: operations["AdminUsersController_findDeletedUserById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/any_users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get users by IDs */
        get: operations["AdminUsersController_findManyAnyUsers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/any_users/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get user by ID */
        get: operations["AdminUsersController_findAnyUserById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create a new user */
        post: operations["AdminUsersController_createUser"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/bulk": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create multiple users */
        post: operations["AdminUsersController_createManyUsers"];
        /** Delete multiple users by IDs (soft) */
        delete: operations["AdminUsersController_deleteManyUsers"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update a user by ID */
        put: operations["AdminUsersController_updateUser"];
        post?: never;
        /** Delete a user by ID (soft) */
        delete: operations["AdminUsersController_deleteUser"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/hard/bulk": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Hard delete multiple users by IDs */
        delete: operations["AdminUsersController_hardDeleteManyUsers"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/hard/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Hard delete a user by ID */
        delete: operations["AdminUsersController_hardDeleteUser"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/restore/bulk": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Restore multiple soft-deleted users by IDs */
        put: operations["AdminUsersController_restoreManyUsers"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/{id}/restore": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Restore a soft-deleted user by ID */
        put: operations["AdminUsersController_restoreUser"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        ActiveUserResponseDto: {
            /**
             * Format: uuid
             * @description The user ID
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            id: string;
            /**
             * Format: email
             * @description The user email address
             * @example takuya.iwashiro@takudev.net
             */
            email: string;
            /**
             * @description The user name
             * @example Takuya Iwashiro
             */
            name: string;
            /**
             * Format: date-time
             * @description The user created at timestamp
             * @example 2024-01-15T09:30:00.000Z
             */
            createdAt: string;
            /**
             * Format: date-time
             * @description The user updated at timestamp
             * @example 2024-06-16T14:45:30.123Z
             */
            updatedAt: string;
        };
        ActiveUsersResponseDto: {
            users: components["schemas"]["ActiveUserResponseDto"][];
        };
        DeletedUserResponseDto: {
            /**
             * Format: uuid
             * @description The user ID
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            id: string;
            /**
             * Format: email
             * @description The user email address
             * @example takuya.iwashiro@takudev.net
             */
            email: string;
            /**
             * @description The user name
             * @example Takuya Iwashiro
             */
            name: string;
            /**
             * Format: date-time
             * @description The user created at timestamp
             * @example 2024-01-15T09:30:00.000Z
             */
            createdAt: string;
            /**
             * Format: date-time
             * @description The user updated at timestamp
             * @example 2024-06-16T14:45:30.123Z
             */
            updatedAt: string;
            /**
             * Format: date-time
             * @description The user deleted at timestamp
             * @example 2024-07-20T10:00:00.000Z
             */
            deletedAt: string | null;
        };
        DeletedUsersResponseDto: {
            users: components["schemas"]["DeletedUserResponseDto"][];
        };
        AnyUserResponseDto: {
            /**
             * Format: uuid
             * @description The user ID
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            id: string;
            /**
             * Format: email
             * @description The user email address
             * @example takuya.iwashiro@takudev.net
             */
            email: string;
            /**
             * @description The user name
             * @example Takuya Iwashiro
             */
            name: string;
            /**
             * Format: date-time
             * @description The user created at timestamp
             * @example 2024-01-15T09:30:00.000Z
             */
            createdAt: string;
            /**
             * Format: date-time
             * @description The user updated at timestamp
             * @example 2024-06-16T14:45:30.123Z
             */
            updatedAt: string;
            /**
             * Format: date-time
             * @description The user deleted at timestamp
             * @example 2024-07-20T10:00:00.000Z
             */
            deletedAt: string | null;
        };
        AnyUsersResponseDto: {
            users: components["schemas"]["AnyUserResponseDto"][];
        };
        CreateUserInputDto: {
            /**
             * Format: email
             * @description The user email address
             * @example takuya.iwashiro@takudev.net
             */
            email: string;
            /**
             * @description The user name
             * @example Takuya Iwashiro
             */
            name: string;
        };
        CreateManyUsersInputDto: {
            /** @description List of users to create */
            users: components["schemas"]["CreateUserInputDto"][];
        };
        UpdateUserDataDto: {
            /**
             * Format: email
             * @description The user email address
             * @example takuya.iwashiro@takudev.net
             */
            email?: string;
            /**
             * @description The user name
             * @example Takuya Iwashiro
             */
            name?: string;
        };
        DeleteManyUsersInputDto: {
            /**
             * @description List of user IDs
             * @example [
             *       "123e4567-e89b-12d3-a456-426614174000",
             *       "789e1234-e89b-12d3-a456-426614174000"
             *     ]
             */
            ids: string[];
        };
        HardDeleteManyUsersInputDto: {
            /**
             * @description List of user IDs
             * @example [
             *       "123e4567-e89b-12d3-a456-426614174000",
             *       "789e1234-e89b-12d3-a456-426614174000"
             *     ]
             */
            ids: string[];
        };
        RestoreManyUsersInputDto: {
            /**
             * @description List of user IDs
             * @example [
             *       "123e4567-e89b-12d3-a456-426614174000",
             *       "789e1234-e89b-12d3-a456-426614174000"
             *     ]
             */
            ids: string[];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    AdminUsersController_findManyUsers: {
        parameters: {
            query: {
                /** @description List of user IDs */
                ids: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Users found */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ActiveUsersResponseDto"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Users not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AdminUsersController_findUserById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description User found */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ActiveUserResponseDto"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description User not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AdminUsersController_findManyDeletedUsers: {
        parameters: {
            query: {
                /** @description List of user IDs */
                ids: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Users found */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DeletedUsersResponseDto"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Users not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AdminUsersController_findDeletedUserById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description User found */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DeletedUserResponseDto"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description User not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AdminUsersController_findManyAnyUsers: {
        parameters: {
            query: {
                /** @description List of user IDs */
                ids: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Users found */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AnyUsersResponseDto"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Users not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AdminUsersController_findAnyUserById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description User found */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AnyUserResponseDto"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description User not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AdminUsersController_createUser: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateUserInputDto"];
            };
        };
        responses: {
            /** @description The user has been successfully created. */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ActiveUserResponseDto"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AdminUsersController_createManyUsers: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateManyUsersInputDto"];
            };
        };
        responses: {
            /** @description Users created successfully */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ActiveUsersResponseDto"];
                };
            };
        };
    };
    AdminUsersController_deleteManyUsers: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DeleteManyUsersInputDto"];
            };
        };
        responses: {
            /** @description Users deleted successfully */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AdminUsersController_updateUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateUserDataDto"];
            };
        };
        responses: {
            /** @description User updated successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ActiveUserResponseDto"];
                };
            };
        };
    };
    AdminUsersController_deleteUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description User deleted successfully */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AdminUsersController_hardDeleteManyUsers: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["HardDeleteManyUsersInputDto"];
            };
        };
        responses: {
            /** @description Users permanently deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AdminUsersController_hardDeleteUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description User permanently deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AdminUsersController_restoreManyUsers: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description IDs of users to be restored */
        requestBody: {
            content: {
                "application/json": components["schemas"]["RestoreManyUsersInputDto"];
            };
        };
        responses: {
            /** @description Users restored successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ActiveUsersResponseDto"];
                };
            };
        };
    };
    AdminUsersController_restoreUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description User restored successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ActiveUserResponseDto"];
                };
            };
        };
    };
}
